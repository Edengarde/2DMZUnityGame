using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Enemy : MonoBehaviour
{
    /*
    [SerializeField]
    internal EnemyMovement eMovementScript;

    [SerializeField]
    internal EnemyAttack eAttackScript;

    [SerializeField]
    internal EnemyCollision eCollisionScript;
    */
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //Tipos de enemigos//
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public bool enemyMovType; //Static = 0 , Dynamic without Jump = 1 , Dynamic w Jump = 2//
    public bool enemyAtkType; //Horizontal = 0  or Vertical = 1 //

    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //Enemy Health Variables
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public int maxHealth = 100;
    public int currentHealth;

    public HealthBar healthBar;
    public Canvas canvas;
   
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Bullet attack variables //
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    [SerializeField]
    public GameObject enemyBullet;

    [SerializeField]
    public Transform bulletSpawnPos;

    [SerializeField]
    public int maxBullets = 5;

    public int activeBullets = 0;

    public bool isAttacking = false;

    public bool isFacingLeft;

    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //Aggro movement variables//
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    [SerializeField]
    public Transform player;

    [SerializeField]
    public float aggroRange;

    [SerializeField]
    public  float moveSpeed;

    [SerializeField]
    public Transform wallDetector;

    public Rigidbody2D rb2d;

    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //Receive damage variables //
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public bool isAttacked = false;

    public float distToPlayer;

    // Start is called before the first frame update
    void Start()
    {
        rb2d = GetComponent<Rigidbody2D>();
        currentHealth = maxHealth;
        isFacingLeft = true;
    }

    // Update is called once per frame
    void Update()
    {
        distToPlayer = Vector2.Distance(transform.position, player.position);
    }

}
